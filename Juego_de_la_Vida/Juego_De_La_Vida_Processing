import java.util.Scanner; 
int size=20;
int col= 800/size;
int row = 800/size;
int [][] Tab  = new int[col][row];
boolean pause = true;
color V = color(100, 100, 200);
color F = color(50);


void setup(){ 
println("Escoja un modo:");
println("0:Modo aleatorio.");
println("1:Modo De patrones.");
println("2:Sandbox");
int num= key;
num=0;


switch(num){
  
  case 0:
  for (int y=0; y<row; y++) {
    for (int x=0; x<row; x++) {
      Tab[x][y]=int (random(2));
      
    }
  }
  //case 1:
  //for (int y=0; y<row; y++) {
   // for (int x=0; x<row; x++) {
     // Tab[x][y]= 0;
     // break;
  //  }
  //}
}
      
  
  size(800,800);
  frameRate(10);
}

void keyPressed() {
  
  if (key==' ') { 
    pause = !pause;
  }
  if (key=='c' ) { 
    for (int x=0; x<800/size; x++) {
      for (int y=0; y<800/size; y++) {
        Tab[x][y] = 0; //equivalente a poner una bomba atomica matando toda la poblacion
      }
    }
  }
  //if key == "q";{
    //frameRate=frameRate-1;
  //else if key == "e";{
   // frameRate=frameRate+1;
  //}
}

void mousePressed() {
  int X = mouseX / size;
  int Y = mouseY / size;
  Tab[X][Y] = 1-Tab[X][Y];
  fill(V);
  print(" x:"+X, " y:"+Y);
} 


void draw() {
  background(0);
  int [][] next = new int [col][row];
  for (int y=1; y<row-1; y++) {
    for (int x=1; x<row-1; x++) {
      int Veci = countVeci(x,y);
      next[x][y] = Rule(Tab[x][y], Veci);
    }
  }
  Tab = next;
  drawBoard();
  if(!pause);
      pause= true;





}

int countVeci(int x, int y){
  int Veci = 0;
  for (int i=-1;i<=1; i++){
    for (int j=-1; j<=1; j++){
      Veci += Tab [x+j][y+i];
    }
  }
  Veci -= Tab[x][y];
  return(Veci);
}

  
//Aply rules

int Rule(int status, int Veci){
  if (status==1 && Veci > 3) return(0);
  else if (status==1 && Veci < 2) return(0);
  else if ( status ==0 && Veci ==3) return(1);
  else return(status);
}
//draw the board
void drawBoard(){
  for (int y=0; y<row; y++) {
    for (int x=0; x<row; x++) {
      if( Tab[x][y]==1){
        fill(V);
      }
      else{
        fill(F);
      }
      rect(x*size, y*size, size, size);
  }
}
}


  



//Gracias a Miles Berry por la idea de crear un tablero futuro para el estado de las celulas
